<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.plan.persistent.repository.PlanRepository">
	<resultMap id="PlanResultMap" type="com.ssafy.plan.persistent.entity.Plan">
	    <id property="id" column="id" />
	    <result property="userId" column="user_id" />
	    <result property="image" column="image" />
	    <result property="sidoCode" column="sido_code" />
	    <result property="gugunCode" column="gugun_code" />
	    <result property="subject" column="subject" />
	    <result property="content" column="content" />
	    <result property="startDate" column="start_date" />
	    <result property="endDate" column="end_date" />
	    <result property="registerTime" column="register_time" />
	</resultMap>
    <!-- Select Plan by ID -->
    <select id="findPlanById" parameterType="int" resultMap="PlanResultMap">
        SELECT *
        FROM plan
        WHERE id = #{planId}
    </select>

    <!-- Select Plans by User ID -->
    <select id="findPlanByUserId" parameterType="String" resultMap="PlanResultMap">
        SELECT *
        FROM plan
        WHERE user_id = #{userId}
    </select>

    <!-- Insert a new Plan -->
    <insert id="createPlan" parameterType="com.ssafy.plan.persistent.entity.Plan">
        INSERT INTO plan (user_id, subject, content, image, sido_code, gugun_code, start_date, end_date, register_time)
        VALUES (#{userId}, #{subject}, #{content}, #{image},#{sidoCode},#{gugunCode}, #{startDate}, #{endDate}, now())
    </insert>

    <!-- Delete a Plan by ID -->
    <delete id="deletePlan" parameterType="int">
        DELETE FROM plan
        WHERE id = #{planId}
    </delete>

    <!-- Update an existing Plan -->
    <update id="updatePlan" parameterType="com.ssafy.plan.persistent.entity.Plan">
        UPDATE plan
        SET
            subject = #{subject},
            content = #{content},
            sido_code = #{sidoCode},
            gugun_code = #{gugunCode},
            start_date = #{startDate},
            end_date = #{endDate},
            register_time = now()
        WHERE id = #{id}
    </update>

    <!-- Count Plans by User ID -->
    <select id="countPlanByUserId" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM plan
        WHERE user_id = #{userId}
    </select>

</mapper>