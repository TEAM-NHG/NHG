<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.ssafy.companion_board.persistent.repository.CommentRepository">
    <!-- ResultMap 정의 -->
    <resultMap id="CommentResultMap" type="com.ssafy.companion_board.persistent.entity.Comment">
        <id property="id" column="id" /> <!-- 댓글 ID -->
	    <result property="articleNo" column="article_no" /> <!-- 게시물 번호 -->
	    <result property="userId" column="user_id" /> <!-- 사용자 ID -->
	    <result property="content" column="content" /> <!-- 댓글 내용 -->
	    <result property="parentId" column="parent_id" />
	    <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/> <!-- 생성일 -->
	    <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
	    <result property="isArticleOwnerRead" column="is_article_owner_read" />
	    <result property="isCommentOwnerRead" column="is_comment_owner_read" />
    </resultMap>

	<resultMap id="CommentDtoResultMap" type="com.ssafy.companion_board.web.dto.CommentDto">
		<id property="id" column="id" /> <!-- 댓글 ID -->
		<result property="articleNo" column="article_no" /> <!-- 게시물 번호 -->
		<result property="userId" column="user_id" /> <!-- 사용자 ID -->
		<result property="content" column="content" /> <!-- 댓글 내용 -->
		<result property="parentId" column="parent_id" />
		<result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/> <!-- 생성일 -->
		<result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
		<result property="isArticleOwnerRead" column="is_article_owner_read" />
		<result property="isCommentOwnerRead" column="is_comment_owner_read" />
		<result property="image" column="image"/>
	</resultMap>

    <!-- 댓글 조회 (단건) -->
    <select id="findComment" resultMap="CommentResultMap">
        SELECT 
            *
        FROM 
            comments
        WHERE 
            id = #{commentId}
    </select>
    <select id="findCommentByUserId" resultMap="CommentResultMap">
        SELECT 
            *
        FROM 
            comments
        WHERE 
            user_id = #{userId} 
    </select>
    
    <select id="findCommentByUserArticle" resultMap="CommentResultMap">
        SELECT 
		    *
		FROM comments
		WHERE 
		    article_no IN (
		        SELECT 
		            article_no 
		        FROM 
		            companion_board
		        WHERE 
		            user_id = #{userId}
		    ) 
		    AND user_id != #{userId} 
		    AND is_article_owner_read = false
			AND parent_id is null
		ORDER BY created_at;

    </select>
    
    <select id="findChildCommentByUserParentComment" resultMap="CommentResultMap">
        SELECT 
		    *
		FROM 
		    comments
		WHERE 
		    parent_id IN (
		        SELECT 
		            id 
		        FROM 
		            comments 
		        WHERE 
		            user_id = #{userId} 
		            AND parent_id IS NULL
		    )
		  AND is_comment_owner_read = false
		  AND user_id != #{userId}
		ORDER BY created_at;

    </select>

    <!-- 댓글 갯수 조회 (게시물 번호로 댓글 갯수 찾기) -->
    <select id="countComment" resultType="int">
        SELECT COUNT(*) 
        FROM comments
        WHERE article_no = #{articleNo}
    </select>

    <!-- 댓글 생성 -->
    <insert id="createComment">
    	<if test="parentId == null">
			INSERT INTO comments (article_no, user_id, content)
        	VALUES (#{articleNo}, #{userId}, #{content})
    	</if>
    	<if test="parentId != null">
			INSERT INTO comments (article_no, user_id, content, parent_id)
        	VALUES (#{articleNo}, #{userId}, #{content}, #{parentId})
    	</if>
    </insert>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment">
        DELETE FROM comments
        WHERE id = #{commentId} and parent_id = #{commentId}
    </delete>

    <!-- 댓글 수정 -->
    <update id="updateComment">
        UPDATE comments
        SET content = #{content}, article_no =#{articleNo}, user_id=#{userId}, content = #{content}
        WHERE id = #{id}
    </update>
    
    <update id="updateArticleOwnerRead">
	    UPDATE comments c
	    JOIN companion_board cb ON c.article_no = cb.article_no
	    SET c.is_article_owner_read = true
	    WHERE c.id = #{commentId}
	    AND cb.user_id = #{userId};
	</update>
	<update id="updateParentCommentOwnerRead">
		    UPDATE comments c
		    JOIN comments p ON c.parent_id = p.id
		    SET c.is_comment_owner_read = true
		    WHERE c.id = #{commentId}
		      AND p.user_id = #{userId};
	</update>
	
    <!-- 게시물에 대한 모든 댓글 갯수 조회 -->
    <select id="findComments" resultMap="CommentDtoResultMap">
        SELECT *, members.img as image
        FROM comments
		LEFT JOIN members
        ON members.id = comments.user_id
        WHERE article_no = #{articleNo}
    </select>

</mapper>
